These changes are a type of state change. CSS transitions allow us to control
 the timing of visual state changes. We can control the following four aspects
 of an element's transition:
- Which CSS properties transition
- How long a transition lasts
- How much time there is before a transition begins
- How a transition accelerates
--------------------------------------------------------------------------------
Duration
To create a simple transition in CSS, we must specify two of the four aspects:
- The property that we want to transition.
- The duration of the transition.
Example:
a {
  transition-property: color;
  transition-duration: 1s;
}
--------------------------------------------------------------------------------
Delay
Delay specifies the time to wait before starting the transition.
transition-delay: 250ms;
--------------------------------------------------------------------------------
Timing Function
The last transition property is transition-timing-function. The timing function
  describes the pace of the transition.
The default value is ease, which starts the transition slowly, speeds up in the
  middle, and slows down again at the end.
Other valid values include:
- ease-in — starts slow, accelerates quickly, stops abruptly
- ease-out — begins abruptly, slows down, and ends slowly
- ease-in-out — starts slow, gets fast in the middle, and ends slowly
- linear — constant speed throughout
--------------------------------------------------------------------------------
Shorthand
Because these four properties are so frequently declared together, CSS provides
  a property that can be used to declare them all in one line: transition. This
  shorthand property describes each aspect of the transition puzzle in a single
  declaration. The properties must be specified in this order:
  transition-property, transition-duration, transition-timing-function,
  transition-delay.
Example:
transition: color 1.5s linear 0.5s;

Leaving out one of the properties causes the default value for that property to
  be applied. There is one exception: You must set duration if you want to
  define delay. Since both are time values, the browser will always interpret
  the first time value it sees as duration.
--------------------------------------------------------------------------------
Combinations
The shorthand transition rule has one advantage over the set of separate
  transition-<property> rules: you can describe unique transitions for multiple
  properties, and combine them.
To combine transitions, add a comma (,) before the semicolon (;) in your rule.
  After the comma, use the same shorthand syntax. For example:
transition: color 1s linear,
font-size 750ms ease-in 100ms;

The above code transitions two properties at once. The text color transitions
  over one second with linear timing and no delay. At the same time, the font
  size transitions over 750 milliseconds with an ease-in timing and a 100
  millisecond delay. This "chaining" is a powerful tool for expressing
  complicated animations.
--------------------------------------------------------------------------------
All 
Even with the shorthand, specifying transitions for many properties can be
  tedious. It is common to use the same duration, timing function, and delay for
  multiple properties. When this is the case you can set the transition-property
  value to all. This will apply the same values to all properties. To effect
  this, you can use all as a value for transition-property.
all means every value that changes will be transitioned in the same way. You can
  use all with the separate transition properties, or the shorthand syntax. This
  allows you to describe the transition of many properties with a single line:
transition: all 1.5s linear 0.5s;
