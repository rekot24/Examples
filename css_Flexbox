There are 2 important components to a flexbox layout:
- flex containers | an element on a page that contains flex items
- flex items | all direct child elements of a flex container
to create a flex container, it's display property must be set to flex.
  display: flex;  or
  display: inline-flex;

justify-content | position items from left to right. There are 5 properties:
  - flex-start | all items will be positioned in order starting, from the left
      of the parent container, with no extra space between or before them.
  - flex-end | all items will be positioned in order, with the last item
      starting on the right side of the parent container, with no extra space
      between or after them.
  - center | all items will be positioned in order, in the center of the parent
      container with no extra space before, between, or after them.
  - space-around | items will be positioned with equal space before and after
      each item, resulting in double the space between elements.
  - space-between | items will be positioned with equal space between them, but
      no extra space before the first or after the last elements.

align-items | adjust vertical positioning. there are also 5 options:
  - flex-start | all elements will be positioned at the top of the parent
      container.
  - flex-end | all elements will be positioned at the bottom of the parent
      container.
  - center | the center of all elements will be positioned halfway between the
      top and bottom of the parent container.
  - baseline | the bottom of the content of all items will be aligned with each
      other.
  - stretch | if possible, the items will stretch from top to bottom of the
      container (this is the default value; elements with a specified height
      will not stretch; elements with a minimum height or no height specified
      will stretch).

flex-grow | allows to specify if items should grow to fill a container and also
  which items should grow proportionally more or less than others max-width
  limits growth even if there is more space to absorb this property is declared
  on flex items the default value is 0, therefore they will not grow unless declared
flex-shrink | works in the same way, except it has a default value of 1.

flex-basis | allows to specify the width of an item before it stretches or shrinks

flex | lets you declare flex-grow, flex-shrink and flex-basis on one line.
  Assign in that order.
    flex: 2 1 150px;
  can also assign flex-grow and flex-shrink together:
    flex: 2 1;
  or you can assign flex-grow and flex-basis:
    flex: 1 20px;
  note: no way to set flex-shrink and flex-basis using 2 values.

flex-wrap | used to move items to next line when necessary.  can accept 3 values:
  - wrap | child elements of a flex container that don't fit into a row will
      move down to the next line
  - wrap-reverse | the same functionality as wrap, but the order of rows within
      a flex container is reversed (for example, in a 2-row flexbox, the first
      row from a wrap container will become the second in wrap-reverse and the
      second row from the wrap container will become the first in wrap-reverse)
  - nowrap | prevents items from wrapping; this is the default value and is
      only necessary to override a wrap value set by a different CSS rule.

align-content | used to space rows from top to bottom when elements wrap to the
  next line.  6 values available to use:
  - flex-start | all rows of elements will be positioned at the top of the
      parent container with no extra space between.
  - flex-end | all rows of elements will be positioned at the bottom of the
      parent container with no extra space between.
  - center | all rows of elements will be positioned at the center of the parent
      element with no extra space between.
  - space-between | all rows of elements will be spaced evenly from the top to
      the bottom of the container with no space above the first or below the last.
  - space-around | all rows of elements will be spaced evenly from the top to
      the bottom of the container with the same amount of space at the top and
      bottom and between each element.
  - stretch | if a minimum height or no height is specified, the rows of
      elements will stretch to fill the parent container from top to bottom
      (default value).

flex-direction | by default the major axis is horizontal and the cross axis
  is vertical.
  Major axis is used to position flex items with the properties:
  - justify-content
  - flex-wrap
  - flex-grow
  - flex-shrink
  Cross axis is used to position flex items with the properties:
  - align-items
  - align-content
  The major axis and cross axis are interchangeable and can be switched using
  flex-direction.  Can accept 4 values:
  - row | elements will be positioned from left to right across the parent
      element starting from the top left corner (default).
  - row-reverse | elements will be positioned from right to left across the
      parent element starting from the top right corner.
  - column | elements will be positioned from top to bottom of the parent
      element starting from the top left corner.
  - column-reverse | elements will be positioned from the bottom to the top
      of the parent element starting from the bottom left corner.

flex-flow | like the flex property, flex-flow is used to declare both the
  flex-wrap and flex-direction properties in one line.  All available values
  are accepted.  flex-direction then flex-wrap is the order of entry.
    flex-flow: column wrap;
    flex-flow: row-reverse nowrap;
